# Generated by Django 4.2.7 on 2025-05-05 13:47

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('properties', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('check_in_date', models.DateField(verbose_name="date d'arrivée")),
                ('check_out_date', models.DateField(verbose_name='date de départ')),
                ('guests_count', models.PositiveSmallIntegerField(default=1, verbose_name='nombre de personnes')),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='prix de base')),
                ('cleaning_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='frais de ménage')),
                ('security_deposit', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='caution')),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='montant de la réduction')),
                ('service_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='frais de service')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='prix total')),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('confirmed', 'Confirmée'), ('cancelled', 'Annulée'), ('completed', 'Terminée')], default='pending', max_length=20, verbose_name='statut')),
                ('payment_status', models.CharField(choices=[('pending', 'En attente'), ('authorized', 'Autorisé'), ('paid', 'Payé'), ('refunded', 'Remboursé'), ('failed', 'Échoué')], default='pending', max_length=20, verbose_name='statut de paiement')),
                ('special_requests', models.TextField(blank=True, verbose_name='demandes spéciales')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date de mise à jour')),
                ('cancelled_at', models.DateTimeField(blank=True, null=True, verbose_name="date d'annulation")),
                ('cancelled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cancelled_bookings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'réservation',
                'verbose_name_plural': 'réservations',
                'db_table': 'findam_bookings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PromoCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='code')),
                ('discount_percentage', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='pourcentage de réduction')),
                ('is_active', models.BooleanField(default=True, verbose_name='actif')),
                ('expiry_date', models.DateTimeField(verbose_name="date d'expiration")),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date de création')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_promo_codes', to=settings.AUTH_USER_MODEL)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promo_codes', to='properties.property')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promo_codes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'code promo',
                'verbose_name_plural': 'codes promo',
                'db_table': 'findam_promo_codes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentTransaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='montant')),
                ('payment_method', models.CharField(choices=[('mobile_money', 'Mobile Money'), ('credit_card', 'Carte de crédit'), ('bank_transfer', 'Virement bancaire')], max_length=20, verbose_name='méthode de paiement')),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('processing', 'En cours de traitement'), ('completed', 'Terminée'), ('failed', 'Échouée'), ('refunded', 'Remboursée')], default='pending', max_length=20, verbose_name='statut')),
                ('transaction_id', models.CharField(blank=True, max_length=100, verbose_name='ID de transaction')),
                ('payment_response', models.JSONField(blank=True, null=True, verbose_name='réponse de paiement')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date de mise à jour')),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transactions', to='bookings.booking')),
            ],
            options={
                'verbose_name': 'transaction de paiement',
                'verbose_name_plural': 'transactions de paiement',
                'db_table': 'findam_payment_transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BookingReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='note')),
                ('comment', models.TextField(verbose_name='commentaire')),
                ('is_from_owner', models.BooleanField(default=False, verbose_name='de la part du propriétaire')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date de mise à jour')),
                ('booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='review', to='bookings.booking')),
            ],
            options={
                'verbose_name': 'avis de réservation',
                'verbose_name_plural': 'avis de réservations',
                'db_table': 'findam_booking_reviews',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='booking',
            name='promo_code',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bookings', to='bookings.promocode'),
        ),
        migrations.AddField(
            model_name='booking',
            name='property',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bookings', to='properties.property'),
        ),
        migrations.AddField(
            model_name='booking',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bookings', to=settings.AUTH_USER_MODEL),
        ),
    ]
