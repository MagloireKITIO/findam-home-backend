# Generated by Django 4.2.7 on 2025-05-05 13:47

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='adresse email')),
                ('phone_number', models.CharField(max_length=15, unique=True, validators=[django.core.validators.RegexValidator(message="Le numéro de téléphone doit être au format: '+999999999'. 15 chiffres maximum.", regex='^\\+?1?\\d{9,15}$')], verbose_name='numéro de téléphone')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='prénom')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='nom')),
                ('user_type', models.CharField(choices=[('tenant', 'Locataire'), ('owner', 'Propriétaire'), ('admin', 'Administrateur')], default='tenant', max_length=10, verbose_name="type d'utilisateur")),
                ('is_staff', models.BooleanField(default=False, verbose_name='statut staff')),
                ('is_active', models.BooleanField(default=True, verbose_name='actif')),
                ('is_verified', models.BooleanField(default=False, verbose_name='vérifié')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name="date d'inscription")),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='dernière connexion')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'utilisateur',
                'verbose_name_plural': 'utilisateurs',
                'db_table': 'findam_users',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('bio', models.TextField(blank=True, max_length=500)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('country', models.CharField(default='Cameroun', max_length=100)),
                ('id_card_number', models.CharField(blank=True, max_length=50)),
                ('id_card_image', models.ImageField(blank=True, null=True, upload_to='id_cards/')),
                ('selfie_image', models.ImageField(blank=True, null=True, upload_to='selfies/')),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('verification_status', models.CharField(choices=[('pending', 'En attente'), ('verified', 'Vérifié'), ('rejected', 'Rejeté')], default='pending', max_length=20)),
                ('verification_notes', models.TextField(blank=True)),
                ('avg_rating', models.DecimalField(decimal_places=2, default=0, max_digits=3)),
                ('rating_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'profil',
                'verbose_name_plural': 'profils',
                'db_table': 'findam_profiles',
            },
        ),
        migrations.CreateModel(
            name='OwnerSubscription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('subscription_type', models.CharField(choices=[('free', 'Gratuit'), ('monthly', 'Mensuel'), ('quarterly', 'Trimestriel'), ('yearly', 'Annuel')], default='free', max_length=10)),
                ('status', models.CharField(choices=[('active', 'Actif'), ('expired', 'Expiré'), ('cancelled', 'Annulé'), ('pending', 'En attente')], default='active', max_length=10)),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('payment_reference', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'abonnement propriétaire',
                'verbose_name_plural': 'abonnements propriétaires',
                'db_table': 'findam_owner_subscriptions',
            },
        ),
    ]
