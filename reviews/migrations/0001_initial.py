# Generated by Django 4.2.7 on 2025-05-05 13:47

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('properties', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rating', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='note globale')),
                ('cleanliness_rating', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='note propreté')),
                ('location_rating', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='note emplacement')),
                ('value_rating', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='note rapport qualité-prix')),
                ('communication_rating', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='note communication')),
                ('title', models.CharField(max_length=100, verbose_name='titre')),
                ('comment', models.TextField(verbose_name='commentaire')),
                ('stay_date', models.DateField(verbose_name='date du séjour')),
                ('is_public', models.BooleanField(default=True, verbose_name='public')),
                ('is_verified_stay', models.BooleanField(default=False, verbose_name='séjour vérifié')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date de mise à jour')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detailed_reviews', to='properties.property')),
                ('reviewer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'avis détaillé',
                'verbose_name_plural': 'avis détaillés',
                'db_table': 'findam_detailed_reviews',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReviewReply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='contenu de la réponse')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date de mise à jour')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_replies', to=settings.AUTH_USER_MODEL)),
                ('review', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='owner_reply', to='reviews.review')),
            ],
            options={
                'verbose_name': 'réponse à un avis',
                'verbose_name_plural': 'réponses aux avis',
                'db_table': 'findam_review_replies',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReviewImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='reviews/', verbose_name='image')),
                ('caption', models.CharField(blank=True, max_length=100, verbose_name='légende')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date de création')),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='reviews.review')),
            ],
            options={
                'verbose_name': "image d'avis",
                'verbose_name_plural': "images d'avis",
                'db_table': 'findam_review_images',
                'ordering': ['review', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReportedReview',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('reason', models.CharField(choices=[('inappropriate', 'Contenu inapproprié'), ('fake', 'Avis frauduleux'), ('personal', 'Informations personnelles'), ('other', 'Autre raison')], max_length=20, verbose_name='raison')),
                ('details', models.TextField(blank=True, verbose_name='détails')),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('reviewed', 'Examiné'), ('actioned', 'Action prise'), ('dismissed', 'Rejeté')], default='pending', max_length=20, verbose_name='statut')),
                ('admin_notes', models.TextField(blank=True, verbose_name='notes administrateur')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date de mise à jour')),
                ('reporter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reported_reviews', to=settings.AUTH_USER_MODEL)),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='reviews.review')),
            ],
            options={
                'verbose_name': "signalement d'avis",
                'verbose_name_plural': "signalements d'avis",
                'db_table': 'findam_reported_reviews',
                'ordering': ['-created_at'],
            },
        ),
    ]
