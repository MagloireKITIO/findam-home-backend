# Generated by Django 4.2.7 on 2025-05-05 13:47

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Amenity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='nom')),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='icône')),
                ('category', models.CharField(blank=True, max_length=50, verbose_name='catégorie')),
            ],
            options={
                'verbose_name': 'équipement',
                'verbose_name_plural': 'équipements',
                'db_table': 'findam_amenities',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='nom')),
            ],
            options={
                'verbose_name': 'ville',
                'verbose_name_plural': 'villes',
                'db_table': 'findam_cities',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Neighborhood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='nom')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='neighborhoods', to='properties.city')),
            ],
            options={
                'verbose_name': 'quartier',
                'verbose_name_plural': 'quartiers',
                'db_table': 'findam_neighborhoods',
                'ordering': ['city', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name='titre')),
                ('description', models.TextField(verbose_name='description')),
                ('property_type', models.CharField(choices=[('apartment', 'Appartement'), ('house', 'Maison'), ('villa', 'Villa'), ('studio', 'Studio'), ('room', 'Chambre'), ('other', 'Autre')], max_length=20, verbose_name='type de logement')),
                ('capacity', models.PositiveSmallIntegerField(default=1, verbose_name='capacité (personnes)')),
                ('bedrooms', models.PositiveSmallIntegerField(default=1, verbose_name='nombre de chambres')),
                ('bathrooms', models.PositiveSmallIntegerField(default=1, verbose_name='nombre de salles de bain')),
                ('address', models.CharField(max_length=255, verbose_name='adresse')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='longitude')),
                ('price_per_night', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='prix par nuit')),
                ('price_per_week', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='prix par semaine')),
                ('price_per_month', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='prix par mois')),
                ('cleaning_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='frais de ménage')),
                ('security_deposit', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='caution')),
                ('allow_discount', models.BooleanField(default=True, verbose_name='autoriser les demandes de rabais')),
                ('cancellation_policy', models.CharField(choices=[('flexible', 'Souple'), ('moderate', 'Modérée'), ('strict', 'Stricte')], default='moderate', max_length=20, verbose_name="politique d'annulation")),
                ('is_published', models.BooleanField(default=False, verbose_name='publié')),
                ('is_verified', models.BooleanField(default=False, verbose_name='vérifié')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date de mise à jour')),
                ('avg_rating', models.DecimalField(decimal_places=2, default=0, max_digits=3, verbose_name='note moyenne')),
                ('rating_count', models.PositiveIntegerField(default=0, verbose_name="nombre d'évaluations")),
                ('amenities', models.ManyToManyField(related_name='properties', to='properties.amenity')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='properties', to='properties.city')),
                ('neighborhood', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='properties', to='properties.neighborhood')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='properties', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'logement',
                'verbose_name_plural': 'logements',
                'db_table': 'findam_properties',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PropertyImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='properties/', verbose_name='image')),
                ('is_main', models.BooleanField(default=False, verbose_name='image principale')),
                ('order', models.PositiveSmallIntegerField(default=0, verbose_name='ordre')),
                ('caption', models.CharField(blank=True, max_length=100, verbose_name='légende')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date de création')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='properties.property')),
            ],
            options={
                'verbose_name': 'image de logement',
                'verbose_name_plural': 'images de logement',
                'db_table': 'findam_property_images',
                'ordering': ['property', 'order'],
            },
        ),
        migrations.CreateModel(
            name='LongStayDiscount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_days', models.PositiveSmallIntegerField(verbose_name='nombre minimum de jours')),
                ('discount_percentage', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='pourcentage de réduction')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='long_stay_discounts', to='properties.property')),
            ],
            options={
                'verbose_name': 'réduction long séjour',
                'verbose_name_plural': 'réductions long séjour',
                'db_table': 'findam_property_discounts',
                'ordering': ['property', 'min_days'],
            },
        ),
        migrations.CreateModel(
            name='Availability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='date de début')),
                ('end_date', models.DateField(verbose_name='date de fin')),
                ('booking_type', models.CharField(choices=[('booking', "Réservation via l'application"), ('external', 'Réservation externe'), ('blocked', 'Bloqué par le propriétaire')], max_length=20, verbose_name='type de réservation')),
                ('booking_id', models.UUIDField(blank=True, null=True, verbose_name='ID de réservation')),
                ('external_client_name', models.CharField(blank=True, max_length=100, verbose_name='nom du client externe')),
                ('external_client_phone', models.CharField(blank=True, max_length=20, verbose_name='téléphone du client externe')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date de mise à jour')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unavailabilities', to='properties.property')),
            ],
            options={
                'verbose_name': 'indisponibilité',
                'verbose_name_plural': 'indisponibilités',
                'db_table': 'findam_property_unavailabilities',
                'ordering': ['property', 'start_date'],
            },
        ),
    ]
